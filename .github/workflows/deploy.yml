name: Deploy Backend to EC2

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
    types: [ closed ]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    # Only run on main/master branch pushes or merged PRs
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || (github.event.pull_request.merged == true)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          
          echo "🚀 Starting deployment at $(date)"
          
          # Navigate to project directory
          cd ${{ secrets.EC2_PATH }}
          
          # Backup current state
          echo "📦 Creating backup..."
          sudo cp -r . ../backend_backup_$(date +%Y%m%d_%H%M%S) || true
          
          # Stash any local changes
          echo "💾 Stashing local changes..."
          git stash push -m "Auto-stash before deployment $(date)" || true
          
          # Pull latest changes
          echo "⬇ Pulling latest changes..."
          git fetch origin
          git reset --hard origin/master || git reset --hard origin/main
          
          # Install/Update Composer dependencies
          echo "📚 Installing Composer dependencies..."
          composer install --no-dev --optimize-autoloader
          
          # Set proper permissions
          echo "🔒 Setting permissions..."
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache
          
          # Clear and cache Laravel configs
          echo "🧹 Clearing caches..."
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear
          
          echo "💾 Caching configurations..."
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Run database migrations (if needed)
          echo "🗃 Running migrations..."
          php artisan migrate --force
          
          # Restart services (adjust according to your setup)
          echo "🔄 Restarting services..."
          sudo systemctl reload nginx || true
          sudo systemctl restart php8.1-fpm || sudo systemctl restart php8.2-fpm || true
          
          echo "✅ Deployment completed successfully at $(date)"
        EOF
        
    - name: Deployment Status
      run: |
        echo "🎉 Deployment to EC2 completed!"
        echo "🕐 Deployment time: $(date)"
        echo "🌍 Server: ${{ secrets.EC2_HOST }}"